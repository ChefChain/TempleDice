import { AgoraChat } from 'agora-chat';
export declare type EventName = 'joinChatRoom' | 'leaveChatRoom' | 'reportMessage' | 'getChatRoomDetails' | 'sendMessage' | 'fetchUserInfoById' | 'translateMessage' | 'recallMessage' | 'deleteConversation' | 'modifyMessage' | 'createChatThread' | 'destroyChatThread' | 'leaveChatThread' | 'open';
export declare type EventHandlerData = {
    [key in EventName]?: {
        success?: () => void;
        error?: (err: AgoraChat.ErrorEvent) => void;
    };
} & {
    onError: (err: AgoraChat.ErrorEvent) => void;
};
export declare class EventHandler {
    handlerData: {
        [key: string]: EventHandlerData;
    };
    private static instance;
    static getInstance(): EventHandler;
    constructor();
    addEventHandler(eventHandlerId: string, eventHandler: EventHandlerData): void;
    removeEventHandler(eventHandlerId: string): void;
    dispatchSuccess(eventName: EventName): void;
    dispatchError(eventName: EventName, error: AgoraChat.ErrorEvent): void;
}
export declare const eventHandler: EventHandler;
